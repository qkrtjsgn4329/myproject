name: Build Kivy APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 60

    env:
      ANDROID_HOME: ${{ github.workspace }}/android-sdk
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Python 3.11
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Java 17 (sdkmanager가 요구)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      # Build deps + buildozer
      - name: Install build deps (Python/Buildozer)
        run: |
          sudo apt-get update
          python -m pip install --upgrade pip
          pip install "cython==0.29.36" buildozer

      # Android cmdline-tools 설치 (sdkmanager 제공)
      - name: Install Android cmdline-tools
        run: |
          mkdir -p "$ANDROID_HOME/cmdline-tools"
          cd "$ANDROID_HOME/cmdline-tools"
          curl -L -o cmdtools.zip https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q cmdtools.zip
          rm cmdtools.zip
          # zip 안에는 cmdline-tools/ 하위에 실제 파일이 있으므로 latest 로 이동
          mkdir -p latest
          mv cmdline-tools/* latest/

      # GitHub Actions PATH 에 도구 추가 (sdkmanager, platform-tools, build-tools)
      - name: Add Android tools to PATH
        run: |
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools"          >> $GITHUB_PATH
          echo "$ANDROID_HOME/build-tools/36.0.0"      >> $GITHUB_PATH
          # Buildozer 내부 SDK 경로도 추가(빌드 중 이 경로를 우선 씀)
          echo "$GITHUB_WORKSPACE/.buildozer/android/platform/android-sdk/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/.buildozer/android/platform/android-sdk/platform-tools"          >> $GITHUB_PATH
          echo "$GITHUB_WORKSPACE/.buildozer/android/platform/android-sdk/build-tools/36.0.0"      >> $GITHUB_PATH

      # ANDROID_HOME 쪽(외부 SDK) 패키지/라이선스
      - name: Accept licenses & install SDK packages (external ANDROID_HOME)
        env:
          SDKMAN: ${{ env.ANDROID_HOME }}/cmdline-tools/latest/bin/sdkmanager
        run: |
          yes | "$SDKMAN" --sdk_root="$ANDROID_HOME" --licenses
          "$SDKMAN" --sdk_root="$ANDROID_HOME" \
            "platform-tools" "platforms;android-34" "build-tools;36.0.0"

      # Buildozer 가 생성하는 내부 SDK 쪽도 동일 패키지/라이선스 적용
      - name: Accept licenses & install SDK packages (for Buildozer SDK dir)
        env:
          SDKMAN: ${{ env.ANDROID_HOME }}/cmdline-tools/latest/bin/sdkmanager
          BZ_SDK: ${{ github.workspace }}/.buildozer/android/platform/android-sdk
        run: |
          mkdir -p "$BZ_SDK"
          yes | "$SDKMAN" --sdk_root="$BZ_SDK" --licenses
          "$SDKMAN" --sdk_root="$BZ_SDK" \
            "platform-tools" "platforms;android-34" "build-tools;36.0.0"

      # APK 빌드
      - name: Build APK
        env:
          ANDROID_HOME: ${{ env.ANDROID_HOME }}
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          buildozer android debug

      # 산출물 업로드
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: bin/*.apk
